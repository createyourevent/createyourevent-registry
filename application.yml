# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  client:
    enabled: false
    healthcheck:
      enabled: true
    fetch-registry: true
    register-with-eureka: true
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
  instance:
    appname: createyourevent
    instanceId: createyourevent:${spring.application.instance-id:${random.value}}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    status-page-url-path: ${management.endpoints.web.base-path}/info
    health-check-url-path: ${management.endpoints.web.base-path}/health
    metadata-map:
      zone: primary # This is needed for the load balancer
      profile: ${spring.profiles.active}
      version: #project.version#
      git-version: ${git.commit.id.describe:}
      git-commit: ${git.commit.id.abbrev:}
      git-branch: ${git.branch:}
      context-path: ${server.servlet.context-path:}
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          ['configprops', 'env', 'health', 'info', 'jhimetrics', 'logfile', 'loggers', 'prometheus', 'threaddump', 'caches', 'liquibase']
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
  health:
    group:
      liveness:
        include: livenessState
      readiness:
        include: readinessState,datasource
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true

spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: ceo@createyourevent.space
    password: Schaffhausen.1977
    properties.mail.smtp.auth: true
    properties.mail.smtp.starttls.enable: true
  cloud:
    gcp:
      security:
        firebase:
          enabled: false
      project-id: createyourevent-mobile
      firestore:
        credentials:
          location: classpath:/config/firebase/createyourevent-mobile-firebase-adminsdk-38w4h-2d1efc9ab4.json
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  application:
    name: createyourevent
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: #spring.profiles.active#
    group:
      dev:
        - dev
        - api-docs
        # Uncomment to activate TLS for the dev profile
        #- tls
  jmx:
    enabled: false
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
  task:
    execution:
      thread-name-prefix: createyourevent-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: createyourevent-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: https://keycloak.createyourevent.space/realms/jhipster
        registration:
          oidc:
            client-id: web_app
            client-secret: 0CMtGDXKuTGC7d89brAPw8I5YVgzRbOS
            scope: openid,profile,email

server:
  use-forward-headers: true
  forward-headers-strategy: NATIVE
  servlet:
    session:
      timeout: 15m
      cookie:
        http-only: true

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

keycloak:
  configurationFile: 'classpath:keycloak.json'
  realm: jhipster
  resource: mobile_app
  auth-server-url: https://keycloak.createyourevent.space/auth
  ssl-required: none
  public-client: true
  verify-token-audience: true
  use-resource-role-mappings: true
  confidential-port: 0
  enabled: true
  security-constraints:
    - auth-roles:
        - '*'
  securityConstraints[0].authRoles[0]: ROLE_USER
  securityConstraints[0].securityCollections[0].patterns[0]: /

logging:
  level:
    org.keycloak: DEBUG
# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  http:
    cache: # Used by the CachingHttpHeadersFilter
      timeToLiveInDays: 0
  clientApp:
    name: 'createyoureventApp'
  mail:
    from: createyourevent@localhost
  api-docs:
    default-include-pattern: ${server.servlet.context-path:}/api/.*
    management-include-pattern: ${server.servlet.context-path:}/management/.*
    title: createyourevent API
    description: createyourevent API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  security:
    content-security-policy: "default-src 'self'; frame-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://storage.googleapis.com; style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' data:; font-src 'self' https://fonts.gstatic.com data:"
    oauth2:
      audience:
        - account
        - api://default
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
